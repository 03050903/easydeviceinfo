{
  "name": "Easydeviceinfo",
  "tagline": "Android library to get device information in a super easy way.",
  "body": "# EasyDeviceInfo    [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.nisrulz/easydeviceinfo/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.github.nisrulz/easydeviceinfo) [![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-EasyDeviceInfo-green.svg?style=true)](https://android-arsenal.com/details/1/3562)\r\n\r\nAndroid library to get device information in a super easy way.\r\n\r\nCheckout the app using the same\r\n\r\n[![playstore](https://github.com/nisrulz/easydeviceinfo/raw/master/img/google-play-store.png)](https://play.google.com/store/apps/details?id=in.excogitation.deviceinfo)\r\n\r\n\r\n#Integration\r\n- EasyDeviceInfo is available in the MavenCentral, so getting it as simple as adding it as a dependency\r\n```gradle\r\ncompile 'com.github.nisrulz:easydeviceinfo:1.1.7'\r\n```\r\n\r\n\r\n#Usage\r\n+ Create an instance of ***EasyDeviceInfo*** class\r\n```java\r\nEasyDeviceInfo easyDeviceInfo=new EasyDeviceInfo(context);\r\n```\r\n+ Next call the required function on the ***easyDeviceInfo*** instance such as\r\n```java\r\nString value=easyDeviceInfo.functionName();\r\n```\r\n\r\n|Value|functionName|returns\r\n|---|---|---|\r\n|Formatted Time (24Hr)|`getFormatedTime()`|String\r\n|Time (ms)|`getTime()`|long\r\n|Language|`getLanguage()`|String\r\n|Android ID|`getAndroidID()`|String\r\n|IMSI|`getIMSI()`|String\r\n|Pseudo ID|`getPsuedoUniqueID()`|String\r\n|Device Serial Number|`getSerial()`|String\r\n|SIM Serial Number|`getSIMSerial()`|String\r\n|Manufacturer|`getManufacturer()`|String\r\n|Model|`getModel()`|String\r\n|OS Codename|`getOSCodename()`|String\r\n|OS Version|`getOSVersion()`|String\r\n|Country|`getCountry()`|String\r\n|`(*)` User-Agent|`getUA()`|String \r\n|Display Resolution|`getResolution()`|String\r\n|Phone Number|`getPhoneNo()`|String\r\n|ISP/Carrier|`getCarrier()`|String\r\n|Radio Hardware Version|`getRadioVer()`|String\r\n|Product|`getProduct()`|String\r\n|Device|`getDevice()`|String\r\n|Board|`getBoard()`|String\r\n|Hardware|`getHardware()`|String\r\n|Bootloader|`getBootloader()`|String\r\n|IP Address|`getIPAddress(true)`|String\r\n|Fingerprint|`getFingerprint()`|String\r\n|Screen Density|`getDensity()`|String\r\n|Installer Store|`getStore()`|String\r\n|Is running on emulator|`isRunningOnEmulator()`|boolean\r\n|Build Brand|`getBuildBrand()`|String\r\n|Build Host|`getBuildHost()`|String\r\n|Build Tags|`getBuildTags()`|String\r\n|Build Time|`getBuildTime()`|long\r\n|Build User|`getBuildUser()`|String\r\n|Build Version Release|`getBuildVersionRelease()`|String\r\n|Screen Display ID|`getScreenDisplayID()`|String\r\n|Build Version Codename|`getBuildVersionCodename()`|String\r\n|Build Version Incremental|`getBuildVersionIncremental()`|String\r\n|Build Version SDK|`getBuildVersionSDK()`|int\r\n|Build ID|`getBuildID()`|String\r\n|Supported ABIS|`getStringSupportedABIS()`|String\r\n|Supported 32 bit ABIS|`getStringSupported32bitABIS()`|String\r\n|Supported 64 bit ABIS|`getStringSupported64bitABIS()`|String\r\n\r\n\r\n> `(*)` : IMPORTANT: Call this method from UI thread only\r\n\r\n\r\n-\r\n\r\n\r\n###Methods that need you to declare permisson in `AndroidManifest.xml`\r\n  \r\n+ To get IMEI\r\n ```java\r\n  String imei = getIMEI()\r\n  ```\r\n\r\n> Include the required permission in your AndroidManifest.xml\r\n\r\n> ```xml \r\n<uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\r\n```\r\n\r\n\r\n+ To check the type of network or checking is internet avaialble\r\n ```java\r\n  String network_type = getNetworkType();\r\n  boolean is_network_available = isNetworkAvailable();\r\n  ```\r\n\r\n> Include the required permission in your AndroidManifest.xml\r\n\r\n> ```xml \r\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\r\n<uses-permission android:name=\"android.permission.INTERNET\"/>\r\n```\r\n\r\n+ To get GSF ID\r\n ```java\r\n  String gsf_id = getGSFID();\r\n  ```\r\n\r\n> Include the required permission in your AndroidManifest.xml\r\n\r\n> ```xml \r\n<uses-permission android:name=\"com.google.android.providers.gsf.permission.READ_GSERVICES\"/>\r\n```\r\n\r\n+ To get WiFi MAC Address\r\n ```java\r\n  String wifi_mac = getWifiMAC();\r\n  ```\r\n\r\n> Include the required permission in your AndroidManifest.xml\r\n\r\n> ```xml \r\n<uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"/>\r\n```\r\n\r\n+ To get Bluetooth MAC Address|``|String\r\n```java\r\nString bluetooth_mac = getBluetoothMAC();\r\n```\r\n\r\n> Include the required permission in your AndroidManifest.xml\r\n\r\n> ```xml \r\n<uses-permission android:name=\"android.permission.BLUETOOTH\"/>\r\n```\r\n\r\n\r\n+ To get Latitude-Longitude (Geo)\r\n```java\r\n//Get Lat-Long\r\ndouble[] l = easyDeviceInfo.getLatLong();\r\nString lat = String.valueOf(l[0]);\r\nString lon = String.valueOf(l[1]);\r\n```\r\n> Include the required permission in your AndroidManifest.xml\r\n\r\n> ```xml \r\n<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\r\n```\r\n\r\n\r\n+ To get Email IDs\r\n```java\r\n//Get Google Email ID\r\nStringBuilder emailIDs = new StringBuilder();\r\n    for (String eid : easyDeviceInfo.getAccounts(this)) {\r\n            emailIDs.append(eid).append(\"\\n\");\r\n        };\r\n\r\nString emailId=emailIDs.toString();\r\n```\r\n> Include the required permission in your AndroidManifest.xml\r\n\r\n> ```xml \r\n<uses-permission android:name=\"android.permission.GET_ACCOUNTS\"/>\r\n```\r\n\r\n###Other multi-value details can be retrieved as below\r\n\r\n+ To get Supported ABIS\r\n```java\r\nStringBuilder supportABI = new StringBuilder();\r\n   for (String abis : easyDeviceInfo.getSupportedABIS()) {\r\n       supportABI.append(abis).append(\"\\n\");\r\n   }\r\n\r\nString supportedABI=supportABI.toString();\r\n```\r\n\r\n+ To get Supported 32 Bit ABIS\r\n```java\r\nStringBuilder support32ABI = new StringBuilder();\r\n   for (String abis : easyDeviceInfo.getSupported32bitABIS()) {\r\n       support32ABI.append(abis).append(\"\\n\");\r\n   }\r\n\r\nString supported32ABI=support32ABI.toString();\r\n```\r\n\r\n+ To get Supported 64 Bit ABIS\r\n```java\r\nStringBuilder support64ABI = new StringBuilder();\r\n   for (String abis : easyDeviceInfo.getSupported64bitABIS()) {\r\n       support64ABI.append(abis).append(\"\\n\");\r\n   }\r\n\r\nString supported64ABI=support64ABI.toString();\r\n```\r\n\r\n\r\n+ To get Advertiser's ID\r\n```java\r\n//Get Android Advertiser ID\r\neasyDeviceInfo.getAndroidAdId(MainActivity.this, new EasyDeviceInfo.AdIdentifierCallback() {\r\n    @Override\r\n    public void onSuccess(String adIdentifier, boolean adDonotTrack) {\r\n        // Do something with the advertiser's ID\r\n    }\r\n});\r\n```\r\n\r\nLicense\r\n=======\r\n\r\n    Copyright 2016 Nishant Srivastava\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}